language: cpp

git:
  depth: 1

notifications:
  email: false
  
matrix:
  matrix:
  include:
    - os: osx
      osx_image: xcode9.2
      compiler: clang
    - os: linux 
      dist: trusty
      group: latest
      sudo: required
      services: docker

before_install:
- |
  if [[ -n "$TRAVIS_TAG" ]]; 
   then 
    if [[ "$TRAVIS_TAG" == *b ]]; 
    then 
      echo "Beta version, set config to Debug"; 
      export MAKECONF=Debug
      export SUFFIX=$TRAVIS_TAG-beta
    else 
      echo "Stable version, set config to Release"; 
      export MAKECONF=Release
      export SUFFIX=$TRAVIS_TAG-stable
    fi; 
  else 
    echo "No tag set, set config to Debug / bleeding"; 
    export MAKECONF=Debug
    export SUFFIX=bleedingedge
  fi;

  echo "Suffix : $SUFFIX"

  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    cd ..
    pwd
    docker run -d --name ubuntu -v $(pwd):/benkuper ubuntu:latest tail -f /dev/null
    docker ps
  else
    gem install xcpretty
    gem install xcpretty-travis-formatter
    pwd
    ls -d */
    cd /Users/travis
    git clone --depth=1 --branch=develop-local https://github.com/benkuper/JUCE.git JUCE
    cd /Users/travis/build/benkuper
    mkdir "JUCE Modules"
    cd "JUCE Modules"
    git clone --depth=1 --branch=master https://github.com/benkuper/juce_organicui.git juce_organicui
    cd ..
    pwd
    ls -d */
  fi
install:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    docker exec -t ubuntu bash -c "export DEBIAN_FRONTEND=noninteractive;
    uname -a;
    apt-get install software-properties-common
    add-apt-repository ppa:webkit-team/ppa -y;
    add-apt-repository -y ppa:ubuntu-toolchain-r/test;
    apt-get update --fix-missing;
    apt-get update -qq;
    echo 'Installing GCC...';
    apt-get install -y g++-7 gcc-7;
    gcc -v;
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 90;
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90;
    export CC=/usr/bin/gcc;
    export CXX=/usr/bin/g++;
    echo ${CC};
    echo ${CXX};
    apt-get install -qq git libfreetype6-dev libx11-dev libxinerama-dev libxrandr-dev libxcursor-dev libxcomposite-dev mesa-common-dev libasound2-dev freeglut3-dev libcurl4-gnutls-dev+ libasound2-dev libjack-dev libbluetooth-dev libgtk-3-dev libwebkit2gtk-4.0-dev curl wget zip unzip;
    cd ~;
    pwd;
    git clone --depth=1 --branch=develop-local https://github.com/benkuper/JUCE.git JUCE;
    cd /benkuper;
    mkdir 'JUCE Modules';
    cd 'JUCE Modules';
    git clone --depth=1 --branch=master https://github.com/benkuper/juce_organicui.git juce_organicui"
  fi

script:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    docker exec -t ubuntu bash -c "gcc -v;
    cd /benkuper/Chataigne/Builds/LinuxMakefile;
    make -j 8 CONFIG=$MAKECONF"
  else
    xcodebuild -project Chataigne/Builds/MacOSX/Chataigne.xcodeproj -configuration $MAKECONF -jobs 8 | xcpretty -f `xcpretty-travis-formatter`
  fi

after_success:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    docker exec -t ubuntu bash -c "cd /benkuper/Chataigne/Builds/LinuxMakefile;
    pwd
    echo 'Downloading AppImageTool...';
    wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage";
    chmod a+x appimagetool-x86_64.AppImage;
    echo 'Packaging AppImage...';
    cp build/Chataigne Chataigne.AppDir;
    ./appimagetool-x86_64.AppImage Chataigne.AppDir Chataigne-linux-x64-$SUFFIX.AppImage;
    echo 'Uploading $SUFFIX ...';
    curl --verbose --progress-bar --ipv4 --connect-timeout 8 --max-time 120 --retry 128 --ftp-ssl --disable-epsv --ftp-pasv  -u "$FTP_USER:$FTP_PASSWORD" ftp://ftp.kuperberg.fr/ -T Chataigne-linux-x64-$SUFFIX.AppImage"
  else
    cd /Users/travis/build/benkuper/Chataigne/Builds/MacOSX/build/$MAKECONF
    ls
    zip -r -y Chataigne-osx-$SUFFIX.zip Chataigne.app
    curl -T Chataigne-osx-$SUFFIX.zip -u $FTP_USER:$FTP_PASSWORD --insecure ftp://ftp.kuperberg.fr/
  fi
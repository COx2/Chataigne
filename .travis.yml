language: cpp

git:
  depth: 1

notifications:
  email: false
  
matrix:
  matrix:
  include:
    - os: osx
      osx_image: xcode10.1
      compiler: clang
      env: JUCE_PATH=/Users/travis JUCE_MODULES_PATH=/Users/travis/build/benkuper PACKAGER_PATH=/Users/travis
    - os: linux 
      arch: amd64
      dist: bionic
      sudo: required
      env: TARGET_SYSTEM=linux-x64 BUILD_FOLDER=LinuxMakefile SYSTEM_ARCH=x86_64 JUCE_PATH=~/ JUCE_MODULES_PATH=~/build/benkuper APPIMAGE_PATH=~/
    - os: linux
      arch: amd64
      dist: bionic
      sudo: required
      env: TARGET_SYSTEM=linux-armhf BUILD_FOLDER=Raspberry SYSTEM_ARCH=armhf JUCE_PATH=~/ JUCE_MODULES_PATH=~/build/benkuper APPIMAGE_PATH=~/

before_install:
- |
  if [ -n "$TRAVIS_TAG" ]; then 
    if [ "$TRAVIS_TAG" == *b* ]; then 
      echo "Beta version, set config to Release"
      export MAKECONF=Release
      export SUFFIX=$TRAVIS_TAG
    else 
      echo "Stable version, set config to Release" 
      export MAKECONF=Release
      export SUFFIX=$TRAVIS_TAG
    fi
  else 
    echo "No tag set, set config to Debug / bleeding" 
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      export MAKECONF=Debug
    else
      export MAKECONF=Release
    fi
    export SUFFIX=bleedingedge
  fi;

  echo "Suffix : $SUFFIX"
  echo "Target system : $TARGET_SYSTEM"

  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    if [ $TARGET_SYSTEM == "linux-armhf" ]; then
      echo 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports bionic main universe' >> /etc/apt/sources.list
      echo 'deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports bionic-updates main universe' >> /etc/apt/sources.list
      sudo dpkg --add-architecture armhf
      
      sudo apt-get update
      echo "Installing armhf cross compilation tools"
      sudo apt-get install -q g++-arm-linux-gnueabihf

      echo "Installing extra lib dependencies"
      sudo apt-get install -q libgdk-pixbuf2.0-dev:armhf libpango1.0-dev:armhf libsoup2.4-dev:armhf libharfbuzz-dev:armhf libxml2-dev:armhf libicu-dev:armhf
      
      export CXX=arm-linux-gnueabihf-g++
      export CC=arm-linux-gnueabihf-gcc
      export PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig
      export TARGET_ARCH="-march=armv8-a"
    fi

    sudo apt-get update
    echo "Installing JUCE lib dependencies and extra tools"
    sudo apt-get install -q libfreetype6-dev:$SYSTEM_ARCH libx11-dev:$SYSTEM_ARCH libxinerama-dev:$SYSTEM_ARCH libxrandr-dev:$SYSTEM_ARCH libxcursor-dev:$SYSTEM_ARCH libxcomposite-dev:$SYSTEM_ARCH mesa-common-dev:$SYSTEM_ARCH libasound2-dev:$SYSTEM_ARCH freeglut3-dev:$SYSTEM_ARCH libcurl4-gnutls-dev:$SYSTEM_ARCH libasound2-dev:$SYSTEM_ARCH libjack-dev:$SYSTEM_ARCH libbluetooth-dev:$SYSTEM_ARCH libgtk-3-dev:$SYSTEM_ARCH libwebkit2gtk-4.0-dev:$SYSTEM_ARCH
    sudo apt-get install -q curl wget zip unzip
    
    echo 'GCC Version:'
    $CC -v

    echo 'Downloading AppImageTool...'
    cd $APPIMAGE_PATH
    wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-$SYSTEM_ARCH.AppImage"
    chmod a+x appimagetool-$SYSTEM_ARCH.AppImage
  else
    gem install xcpretty
    gem install xcpretty-travis-formatter

    cd $PACKAGER_PATH
    curl -L -o Packages.dmg 'http://s.sudre.free.fr/Software/files/Packages.dmg'
    hdiutil mount Packages.dmg
    sudo installer -pkg /Volumes/Packages\ $PACKAGES_VERSION/Install\ Packages.pkg -target /
    hdiutil detach /Volumes/Packages\ $PACKAGES_VERSION/
  fi

install:
- |
  cd $JUCE_PATH
  git clone --depth=1 --branch=develop-local https://github.com/benkuper/JUCE.git JUCE

  cd $JUCE_MODULES_PATH;
  mkdir "JUCE Modules";
  cd "JUCE Modules";
  git clone --depth=1 --branch=master https://github.com/benkuper/juce_organicui.git juce_organicui
  git clone --depth=1 --branch=master https://github.com/benkuper/juce_timeline.git juce_timeline

script:
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    cd ~/build/benkuper/Chataigne/Builds/$BUILD_FOLDER
    make -j2 CONFIG=$MAKECONF
  else
    cd /Users/travis/build/benkuper
    xcodebuild -project Chataigne/Builds/MacOSX/Chataigne.xcodeproj -configuration $MAKECONF -jobs 2 -verbose | xcpretty -f `xcpretty-travis-formatter`
  fi

after_success:
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    cd ~/build/benkuper/Chataigne/Builds/$BUILD_FOLDER
    
    echo 'Packaging AppImage...'
    mkdir Chataigne.AppDir/usr/bin/
    cp build/Chataigne Chataigne.AppDir/usr/bin/
    $APPIMAGE_PATH/appimagetool-$SYSTEM_ARCH.AppImage Chataigne.AppDir Chataigne-$TARGET_SYSTEM-$SUFFIX.AppImage
    echo 'Uploading $SUFFIX ...'
    curl -X POST -F 'appFile=@Chataigne-$TARGET_SYSTEM-$SUFFIX.AppImage' -F 'pass=$UPLOAD_PASS' $UPLOAD_URL
  else
    cd /Users/travis/build/benkuper/Chataigne/Package
    ls
    packagesbuild Chataigne.pkgproj
    mv Chataigne.pkg Chataigne-osx-$SUFFIX.pkg
    curl -T Chataigne-osx-$SUFFIX.pkg -u $FTP_USER:$FTP_PASSWORD --insecure ftp://ftp.kuperberg.fr/
  fi

language: cpp

git:
  depth: 1

notifications:
  email: false
  
matrix:
  matrix:
  include:
    - os: osx
      osx_image: xcode10.1
      compiler: clang
    - os: linux 
      dist: trusty
      group: latest
      sudo: required
      services: docker
      env: TARGET_SYSTEM=linux-x64 BUILD_FOLDER=LinuxMakeFile
    - os: linux
      dist: trusty
      group: latest
      sudo: required
      services: docker
      env: TARGET_SYSTEM=raspberry BUILD_FOLDER=Raspberry

before_install:
- |
  if [[ " -n "$TRAVIS_TAG]];
   then 
    if [[ "$TRAVIS_TAG" == *b* ]]; 
    then 
      echo "Beta version, set config to Release"; 
      export MAKECONF=Release
      export SUFFIX=$TRAVIS_TAG
    else 
      echo "Stable version, set config to Release"; 
      export MAKECONF=Release
      export SUFFIX=$TRAVIS_TAG
    fi; 
  else 
    echo "No tag set, set config to Debug / bleeding"; 
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      export MAKECONF=Debug
    else
      export MAKECONF=Release
    fi
    export SUFFIX=bleedingedge
  fi;

  echo "Suffix : $SUFFIX"
  echo "Target system : $TARGET_SYSTEM"

  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    cd ..
    pwd
    docker run -d --name ubuntu --privileged -v $(pwd):/benkuper ubuntu:latest tail -f /dev/null
    docker ps
  else
    gem install xcpretty
    gem install xcpretty-travis-formatter
    pwd
    ls -d */
    cd /Users/travis
    git clone --depth=1 --branch=develop-local https://github.com/benkuper/JUCE.git JUCE
    cd /Users/travis/build/benkuper
    mkdir "JUCE Modules"
    cd "JUCE Modules"
    git clone --depth=1 --branch=master https://github.com/benkuper/juce_organicui.git juce_organicui
    cd ..
    pwd
    ls -d */
    curl -L -o Packages.dmg 'http://s.sudre.free.fr/Software/files/Packages.dmg'
    hdiutil mount Packages.dmg
    sudo installer -pkg /Volumes/Packages\ 1.2.5/Install\ Packages.pkg -target /
    hdiutil detach /Volumes/Packages\ 1.2.5/
    cd /Users/travis/build/benkuper
  fi
install:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; 
   then

    echo "Linux machine"
    
    if [[ $TARGET_SYSTEM == "raspberry"]];
     then
      
      echo "Raspberry target system"

    else
      
      echo "Linux target system"

    fi
  fi

script:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    docker exec -t ubuntu bash -c "gcc -v;
    cd /benkuper/Chataigne/Builds/$BUILD_FOLDER;
    make -j 8 CONFIG=$MAKECONF"
  else
    xcodebuild -project Chataigne/Builds/MacOSX/Chataigne.xcodeproj -configuration $MAKECONF -jobs 8 -verbose | xcpretty -f `xcpretty-travis-formatter`
  fi

after_success:
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    docker exec -t ubuntu bash -c "cd /benkuper/Chataigne/Builds/LinuxMakefile;
    pwd
    echo 'Downloading AppImageTool...';
    wget "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage";
    chmod a+x appimagetool-x86_64.AppImage;
    echo 'Packaging AppImage...';
    mkdir Chataigne.AppDir/usr/bin/;
    cp build/Chataigne Chataigne.AppDir/usr/bin/;
    ./appimagetool-x86_64.AppImage Chataigne.AppDir Chataigne-$TARGET_SYSTEM-$SUFFIX.AppImage;
    echo 'Uploading $SUFFIX ...';
    curl -X POST -F 'appFile=@Chataigne-$TARGET_SYSTEM-$SUFFIX.AppImage' -F 'pass=$UPLOAD_PASS' $UPLOAD_URL;"
  else
    cd /Users/travis/build/benkuper/Chataigne/Package
    ls
    packagesbuild Chataigne.pkgproj
    mv Chataigne.pkg Chataigne-osx-$SUFFIX.pkg
    curl -T Chataigne-osx-$SUFFIX.pkg -u $FTP_USER:$FTP_PASSWORD --insecure ftp://ftp.kuperberg.fr/
  fi
